@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");

$color-theme: #06874e;
$color-back: #ededed;
 
body {
    margin: 0;
}

code {
    font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
        monospace;
}

.App {
    height: 100vh;
    background-color: $color-back;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-family: "Roboto", sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    color: var(--theme-page-text);
}

.auth-form-body {
    border-top: 2px solid $color-theme;
    width: 350px;
    background-color: #fff;
    padding: 25px;
	@media screen and (max-width: 400px) {
    width:auto
    }
		
    .title {
        text-align: center;
        font-size: 29px;
        font-weight: bold;
        margin-bottom: 10px;
    }
    .button-submit {
        //nested? yes: sometimes it's possible have similar components, but depending on Parent Comp. we will need some changes
        height: 45px;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: $color-theme;
        border: 0;
        color: #fff;
        font-size: 20px;
        cursor: pointer;
        transition: all 0.3s;
        img {
            height: 25px;
        }
    }
    .button-submit:hover {
        opacity: 0.8;
    }
}

.auth-form-box-error {
    padding: 5px;
    box-sizing: border-box;
    text-align: center;
    width: 100%;
    margin-top: 5px;
    margin-bottom: 5px;
    background-color: #f77;
    font-size: 14px;
}

.auth-form-input {
    // input email and password
    label {
        font-size: 18px;
        font-weight: bold;
    }
    input {
        font-size: 16px;
        width: 100%;
        height: 45px;
        margin-bottom: 15px;
        box-sizing: border-box;
        border: 1px solid #ddd;
        padding: 10px 5px;
    }
}

.auth-form-remember {
    display: flex;
    align-content: center;
    width: "auto";
    position: relative;
    padding-left: 25px;
    margin-bottom: 15px;
    border: 1px solid #fff;
    cursor: pointer;
    font-size: 18px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

// .auth-form-remember:focus-within {
//     border: 1px solid #aaa;
// }

// Hide the browser's default checkbox 
.auth-form-remember input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

// Create a custom checkbox 
.checkmark {
    position: absolute;
    top: 2px;
    left: 0;
    height: 15px;
    width: 15px;
    background-color: #fff;
    border: 1px solid #444;
    transition: all 0.3s;
}

//On mouse-over, add a grey background color 
.auth-form-remember:hover input ~ .checkmark {
    background-color: #ccc;
}

// When the checkbox is checked, add a colored background
.auth-form-remember input:checked ~ .checkmark {
    background-color: $color-theme;
}
.auth-form-remember input:focus ~ .checkmark {
    //checkbox can be selected using tab and space bar. So, we need to see when there is focus
    box-shadow: 0 0 10px #aaa;
}

//Create the checkmark/indicator (hidden when not checked) 
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

// Show the checkmark when checked 
.auth-form-remember input:checked ~ .checkmark:after {
    display: block;
}

// Style the checkmark/indicator 
.auth-form-remember .checkmark:after {
    left: 5px;
    top: 2px;
    width: 4px;
    height: 7px;
    border: solid white;
    border-width: 0 2px 2px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

.auth-form-footer {
    //links on bottom
    display: flex;
    align-items: center;
    flex-direction: column;
    margin-top: 20px;
    font-size: 14px;

    div {
        text-align: center;
        margin-bottom: 10px;
        width: auto;
    }
    a {
        font-weight: bold;
        color: #000;
        text-decoration: underline;
        cursor: pointer;
    }
}
